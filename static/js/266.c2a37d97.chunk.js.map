{"version":3,"file":"static/js/266.c2a37d97.chunk.js","mappings":"uQAAO,IAAMA,EAAsB,WACjC,OAAOC,MAAM,yGAEXC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,GACtC,EAEaC,EAAoB,SAACC,GAChC,OAAOL,MAAM,sCAADM,OAC4BD,EAAO,qEAC7CJ,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,GACtC,EAEaI,EAAoB,SAACF,GAChC,OAAOL,MAAM,sCAADM,OAC4BD,EAAO,4EAC7CJ,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,GACtC,EAEaK,EAAoB,SAACC,GAChC,OAAOT,MAAM,6FAADM,OACmFG,EAAK,8CAClGR,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,GACtC,EAEaO,EAAoB,SAACL,GAChC,OAAOL,MAAM,sCAADM,OAC4BD,EAAO,6DAC7CJ,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,GACtC,C,8ECQA,UAhCA,WACE,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACRO,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAW1B,OARAI,EAAAA,EAAAA,YAAU,WACHb,IAELE,EAAAA,EAAAA,IAAkBF,GACfJ,MAAK,SAACkB,GAAI,OAAKF,EAAWE,EAAKC,QAAQ,IACvCC,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAM,uBAAwBA,EAAM,GAClE,GAAG,CAACjB,KAGFmB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACgB,IAAnBT,EAAQW,QACPD,EAAAA,EAAAA,KAAA,KAAAD,SAdiB,oCAgBjBC,EAAAA,EAAAA,KAAA,MAAAD,SACGT,EAAQY,KAAI,SAACC,GAAM,OAClBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAOC,UACZJ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOE,YAFJF,EAAOG,GAGX,QAMjB,C","sources":["components/api.js","components/pages/Reviews/Reviews.js"],"sourcesContent":["export const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?language=en-US&api_key=316b4ff5021b2aca3f42c833755ebf8b`\n  ).then((response) => response.json());\n};\n\nexport const fetchMovieCredits = (movieId) => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=316b4ff5021b2aca3f42c833755ebf8b`\n  ).then((response) => response.json());\n};\n\nexport const fetchMovieReviews = (movieId) => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1&api_key=316b4ff5021b2aca3f42c833755ebf8b`\n  ).then((response) => response.json());\n};\n\nexport const fetchSearchMovies = (query) => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${query}&api_key=316b4ff5021b2aca3f42c833755ebf8b`\n  ).then((response) => response.json());\n};\n\nexport const fetchMovieDetails = (movieId) => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=316b4ff5021b2aca3f42c833755ebf8b`\n  ).then((response) => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../api'; // Імпортуємо функцію з api.js\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const defaultMessage = 'No reviews for this movie yet.';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchMovieReviews(movieId) // Використовуйте функцію для отримання оглядів\n      .then((data) => setReviews(data.results))\n      .catch((error) => console.error('Error fetching data:', error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length === 0 ? (\n        <p>{defaultMessage}</p>\n      ) : (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["fetchTrendingMovies","fetch","then","response","json","fetchMovieCredits","movieId","concat","fetchMovieReviews","fetchSearchMovies","query","fetchMovieDetails","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","data","results","catch","error","console","_jsxs","children","_jsx","length","map","review","author","content","id"],"sourceRoot":""}